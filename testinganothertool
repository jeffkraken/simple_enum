test
IyBpZiB1c2luZyBKdXB5dGVyIE5vdGVib29rcyBvciBDb0xhYiwgdXNlIHRoZXNlIG1hZ2ljIGNvbW1hbmRzIGluc3RlYWQgb2Ygc3VicHJvY2Vzcy5jaGVja19jYWxsCiMgIXBpcCBpbnN0YWxsIHJlcXVlc3RzCiMgIXBpcCBpbnN0YWxsIGRuc3B5dGhvbgojICFwaXAgaW5zdGFsbCBpbXBhY2tldAoKaW1wb3J0IHN1YnByb2Nlc3MKc3VicHJvY2Vzcy5jaGVja19jYWxsIChbJ3BpcCcsICdpbnN0YWxsJywgJ3JlcXVlc3RzJ10pCnN1YnByb2Nlc3MuY2hlY2tfY2FsbCAoWydwaXAnLCAnaW5zdGFsbCcsICdkbnNweXRob24nXSkKc3VicHJvY2Vzcy5jaGVja19jYWxsIChbJ3BpcCcsICdpbnN0YWxsJywgJ2ltcGFja2V0J10pCgppbXBvcnQgZG5zLnJlc29sdmVyCmltcG9ydCByZXF1ZXN0cwppbXBvcnQgc29ja2V0CmltcG9ydCBzbXRwbGliCmltcG9ydCBzc2wKCiMgU2NhbiBvcGVuIHBvcnRzIGFuZCB0cmlnZ2VyIHJlc3BlY3RpdmUgY2hlY2tzCmRlZiBwb3J0X3NjYW5uZXIodGFyZ2V0X2lwKToKICAgIHBvcnRzID0gewogICAgICAgIDI1OiAiU01UUCAoU2ltcGxlIE1haWwgVHJhbnNmZXIgUHJvdG9jb2wpIC0gdXNlZCBmb3IgZW1haWwgcm91dGluZy4iLAogICAgICAgIDUzOiAiRE5TIChEb21haW4gTmFtZSBTeXN0ZW0pIC0gdXNlZCBmb3IgZG9tYWluIG5hbWUgcmVzb2x1dGlvbi4iLAogICAgICAgIDgwOiAiSFRUUCAoSHlwZXJUZXh0IFRyYW5zZmVyIFByb3RvY29sKSAtIHVzZWQgZm9yIHdlYiB0cmFmZmljLiIsCiAgICAgICAgNDQzOiAiSFRUUFMgKEh5cGVyVGV4dCBUcmFuc2ZlciBQcm90b2NvbCB1c2luZyBTU0wvVExTKSAtIHVzZWQgZm9yIHNlY3VyZSB3ZWIgdHJhZmZpYy4iLAogICAgICAgIDQ0NTogIlNNQiAoU2VydmVyIE1lc3NhZ2UgQmxvY2spIC0gdXNlZCBmb3IgZmlsZSBzaGFyaW5nIGluIFdpbmRvd3MgbmV0d29ya3MuIgogICAgfQogICAgCiAgICBvcGVuX3BvcnRzID0gW10KICAgIAogICAgIyBWYWxpZGF0ZSBJUCBhZGRyZXNzIGZvcm1hdAogICAgdHJ5OgogICAgICAgIHNvY2tldC5pbmV0X2F0b24odGFyZ2V0X2lwKQogICAgZXhjZXB0IHNvY2tldC5lcnJvcjoKICAgICAgICBwcmludChmIkludmFsaWQgSVAgYWRkcmVzcyBmb3JtYXQ6IHt0YXJnZXRfaXB9IikKICAgICAgICByZXR1cm4KCiAgICAjIFNjYW4gdGhlIHNwZWNpZmllZCBwb3J0cwogICAgZm9yIHBvcnQsIGRlc2NyaXB0aW9uIGluIHBvcnRzLml0ZW1zKCk6CiAgICAgICAgc29jayA9IHNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsIHNvY2tldC5TT0NLX1NUUkVBTSkKICAgICAgICBzb2NrLnNldHRpbWVvdXQoMTUpCiAgICAgICAgcmVzdWx0ID0gc29jay5jb25uZWN0X2V4KCh0YXJnZXRfaXAsIHBvcnQpKQogICAgICAgIGlmIHJlc3VsdCA9PSAwOgogICAgICAgICAgICBvcGVuX3BvcnRzLmFwcGVuZCgocG9ydCwgZGVzY3JpcHRpb24pKQogICAgICAgIHNvY2suY2xvc2UoKQoKICAgICMgRGlzcGxheSByZXN1bHRzIGFuZCBoYW5kbGUgYWRkaXRpb25hbCBsb2dpYyBmb3Igb3BlbiBwb3J0cwogICAgaWYgb3Blbl9wb3J0czoKICAgICAgICBwcmludChmIk9wZW4gcG9ydHMgb24ge3RhcmdldF9pcH06IikKICAgICAgICBmb3IgcG9ydCwgZGVzY3JpcHRpb24gaW4gb3Blbl9wb3J0czoKICAgICAgICAgICAgcHJpbnQoZiJQb3J0IHtwb3J0fToge2Rlc2NyaXB0aW9ufSIpCiAgICAgICAgICAgIAogICAgICAgICAgICAjIFRyaWdnZXIgc3BlY2lmaWMgY2hlY2tzIGJhc2VkIG9uIHRoZSBvcGVuIHBvcnQKICAgICAgICAgICAgaWYgcG9ydCA9PSA0NDU6CiAgICAgICAgICAgICAgICBlbnVtZXJhdGVfc2hhcmVzKHRhcmdldF9pcCkKICAgICAgICAgICAgZWxpZiBwb3J0ID09IDI1OgogICAgICAgICAgICAgICAgY2hlY2tfc210cCh0YXJnZXRfaXApCiAgICAgICAgICAgIGVsaWYgcG9ydCA9PSA1MzoKICAgICAgICAgICAgICAgIGNoZWNrX2Rucyh0YXJnZXRfaXApCiAgICAgICAgICAgIGVsaWYgcG9ydCA9PSA4MDoKICAgICAgICAgICAgICAgIGNoZWNrX2h0dHAodGFyZ2V0X2lwKQogICAgICAgICAgICBlbGlmIHBvcnQgPT0gNDQzOgogICAgICAgICAgICAgICAgY2hlY2tfaHR0cHModGFyZ2V0X2lwKQogICAgICAgICAgICAgICAgY2hlY2tfaHR0cHNfY2VydGlmaWNhdGUodGFyZ2V0X2lwKQogICAgZWxzZToKICAgICAgICBwcmludChmIk5vIG9wZW4gcG9ydHMgZm91bmQgb24ge3RhcmdldF9pcH0gKHBvcnRzOiB7bGlzdChwb3J0cy5rZXlzKCkpfSkuIikKCgojIENoZWNrIFNNVFAgc2VydmljZQpkZWYgY2hlY2tfc210cCh0YXJnZXRfaXApOgogICAgdHJ5OgogICAgICAgIHNlcnZlciA9IHNtdHBsaWIuU01UUCh0YXJnZXRfaXAsIDI1LCB0aW1lb3V0PTEwKQogICAgICAgIHNlcnZlci5laGxvKCkKICAgICAgICBwcmludChmIlNNVFAgc2VydmljZSBpcyByZXNwb25zaXZlIG9uIHt0YXJnZXRfaXB9LiIpCiAgICAgICAgc2VydmVyLnF1aXQoKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiRXJyb3IgY29ubmVjdGluZyB0byBTTVRQIG9uIHt0YXJnZXRfaXB9OiB7ZX0iKQoKCiMgQ2hlY2sgRE5TIHNlcnZpY2UKZGVmIGNoZWNrX2Rucyh0YXJnZXRfaXApOgogICAgdHJ5OgogICAgICAgIHJlc29sdmVyID0gZG5zLnJlc29sdmVyLlJlc29sdmVyKCkKICAgICAgICByZXNvbHZlci5uYW1lc2VydmVycyA9IFt0YXJnZXRfaXBdCiAgICAgICAgYW5zd2VyID0gcmVzb2x2ZXIucmVzb2x2ZSgiZ29vZ2xlLmNvbSIsICJBIikKICAgICAgICBwcmludChmIkROUyBzZXJ2aWNlIGlzIHJlc3BvbnNpdmUgb24ge3RhcmdldF9pcH0uIFJlc29sdmVkIGdvb2dsZS5jb20gdG8ge2Fuc3dlclswXX0iKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiRXJyb3IgcXVlcnlpbmcgRE5TIG9uIHt0YXJnZXRfaXB9OiB7ZX0iKQoKCiMgQ2hlY2sgSFRUUCBzZXJ2aWNlCmRlZiBjaGVja19odHRwKHRhcmdldF9pcCk6CiAgICB0cnk6CiAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQoZiJodHRwOi8ve3RhcmdldF9pcH0iLCB0aW1lb3V0PTUpCiAgICAgICAgcHJpbnQoZiJIVFRQIHNlcnZpY2UgaXMgcmVzcG9uc2l2ZSBvbiB7dGFyZ2V0X2lwfS4gU3RhdHVzIGNvZGU6IHtyZXNwb25zZS5zdGF0dXNfY29kZX0iKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiRXJyb3IgY29ubmVjdGluZyB0byBIVFRQIG9uIHt0YXJnZXRfaXB9OiB7ZX0iKQoKZGVmIGNoZWNrX2h0dHBzKHRhcmdldF9pcCk6CiAgICB0cnk6CiAgICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KGYiaHR0cHM6Ly97dGFyZ2V0X2lwfSIsIHRpbWVvdXQ9NSkKICAgICAgcHJpbnQoZiJIVFRQUyBzZXJ2aWNlIGlzIHJlc3BvbnNpdmUgb24ge3RhcmdldF9pcH0uIFN0YXR1cyBjb2RlOiB7cmVzcG9uc2Uuc3RhdHVzX2NvZGV9IikKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgcHJpbnQoZiJFcnJvciBjb25uZWN0aW5nIHRvIEhUVFBTIG9uIHt0YXJnZXRfaXB9OiB7ZX0iKQoKZGVmIGNoZWNrX2h0dHBzX2NlcnRpZmljYXRlKHRhcmdldF9pcCk6CiAgICB0cnk6CiAgICAgIGNvbnRleHQgPSBzc2wuY3JlYXRlX2RlZmF1bHRfY29udGV4dCgpCiAgICAgIGNvbm4gPSBjb250ZXh0LndyYXBfc29ja2V0KHNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQpLCBzZXJ2ZXJfaG9zdG5hbWU9dGFyZ2V0X2lwKQogICAgICBjb25uLnNldHRpbWVvdXQoNSkKICAgICAgY29ubi5jb25uZWN0KCh0YXJnZXRfaXAsIDQ0MykpCgogICAgICBjZXJ0ID0gY29ubi5nZXRwZWVyY2VydCgpCiAgICAgIGlzc3VlciA9IGRpY3QoeFswXSBmb3IgeCBpbiBjZXJ0Wydpc3N1ZXInXSkKICAgICAgc3ViamVjdF9hbHRfbmFtZXMgPSBjZXJ0LmdldCgnc3ViamVjdEFsdE5hbWUnLCBbXSkKICAgICAgZXhwaXJhdGlvbl9kYXRlID0gY2VydFsnbm90QWZ0ZXInXQogICAgICBjb25uLmNsb3NlKCkKCiAgICAgIHByaW50KGYiXG5DZXJ0aWZpY2F0ZSBkZXRhaWxzIGZvciB7dGFyZ2V0X2lwfToiKQogICAgICBwcmludChmIlx0Q2VydGlmaWNhdGUgQXV0aG9yaXR5IChJc3N1ZXIpOiB7aXNzdWVyLmdldCgnb3JnYW5pemF0aW9uTmFtZScsICdVbmtub3duJyl9IikKICAgICAgcHJpbnQoZiJcdFN1YmplY3QgQWx0ZXJuYXRpdmUgTmFtZXMgKFNBTnMpOiB7W3NhblsxXSBmb3Igc2FuIGluIHN1YmplY3RfYWx0X25hbWVzXX0iKQogICAgICBwcmludChmIlx0RXhwaXJhdGlvbiBEYXRlOiB7ZXhwaXJhdGlvbl9kYXRlfSIpCgogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICBwcmludChmIkVycm9yIHJldHJpZXZpbmcgSFRUUFMgY2VydGlmaWNhdGUgZnJvbSB7dGFyZ2V0X2lwfToge2V9IikKCgojIEVudW1lcmF0ZSBTTUIgc2hhcmVzCmRlZiBlbnVtZXJhdGVfc2hhcmVzKHRhcmdldF9pcCk6CiAgICB0cnk6CiAgICAgICAgcmVzdWx0ID0gc3VicHJvY2Vzcy5ydW4oWydzbWJjbGllbnQnLCAnLUwnLCBmJ1xcXFx7dGFyZ2V0X2lwfScsICctLW5vLXBhc3MnXSwgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Rkb3V0PXN1YnByb2Nlc3MuUElQRSwgc3RkZXJyPXN1YnByb2Nlc3MuUElQRSwgdGV4dD1UcnVlKQogICAgICAgIGlmIHJlc3VsdC5yZXR1cm5jb2RlID09IDA6CiAgICAgICAgICAgIHByaW50KGYiU2hhcmVzIGF2YWlsYWJsZSBvbiB7dGFyZ2V0X2lwfTpcbiIpCiAgICAgICAgICAgIHByaW50KHJlc3VsdC5zdGRvdXQpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQoZiJFcnJvciBjb25uZWN0aW5nIHRvIFNNQiBvbiB7dGFyZ2V0X2lwfToge3Jlc3VsdC5zdGRlcnJ9IikKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIkVycm9yIGVudW1lcmF0aW5nIFNNQiBzaGFyZXM6IHtlfSIpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHRhcmdldF9pcCA9IGlucHV0KCJFbnRlciB0aGUgdGFyZ2V0IElQIGFkZHJlc3M6ICIpCiAgICBwb3J0X3NjYW5uZXIodGFyZ2V0X2lwKQ==
